0000:              .org 00h 
0000: 02 00 03     ljmp main
                   
                   main:
0003: 90 FE 03         mov dptr, #0FE03h
0006: 74 36            mov A, #36h
0008: F0               movx @dptr, A     ; Update Control Byte with 36 
                       loop:
0009: 12 00 1B             lcall getkey        ; Get a Button Press
000C: 12 00 2C             lcall fix           ; Obtain the freq hex code in ac
000F: 90 FE 00             mov dptr, #0FE00h
0012: F0                   movx @dptr, A       ; Move in the low byte to #FE00h
0013: 90 FE 00             mov dptr, #0FE00h
0016: 74 01                mov a, #01h
0018: F0                   movx @dptr, A       ; Move in the high byte to #FE00
0019: 80 EE                sjmp loop
                   
                   getkey:
001B: 30 B3 FD         jnb P3.3, getkey        ; Jump if bit not set, wait for 
001E: 75 90 FF         mov P1, #0FFh           ; Set Port 1 high to be read
                       pressdone:              
0021: 20 B3 FD             jb P3.3, pressdone  ; If press detected, wait for it
0024: E5 90                mov a, P1           ; Reading to Port 1
0026: C3                   clr C             
0027: 94 F0                SUBB A, #0F0h       ; Make first nibble 0s
0029: F5 90                mov P1, a; Writing to Port 1
                           ;clr P1
002B: 22                   ret
                   
                   
                   fix:
002C: 04               inc a                   ; increment acc
002D: 83               movc a, @a+pc           ; get correct ASCII translation 
002E: 22               ret
002F: 00 00 09 00 
      00 45 39 36 
      00 30 27 20 
      00 1C 15 11 
                       .db 00h, 00h, 09h, 00h, 00h, 45h, 39h, 36h, 00h, 30h, 27
                   
